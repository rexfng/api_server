define({ "api": [  {    "type": "delete",    "url": "/api/v1/:collection/:id",    "title": "DELETE One",    "name": "Data_Delete",    "group": "Data_Service",    "description": "<p>Delete and object based on its :collection and :id</p>",    "version": "1.0.0",    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "Data_Service"  },  {    "type": "delete",    "url": "/api/v1/:collection",    "title": "DELETE All",    "name": "Data_Delete_All",    "group": "Data_Service",    "description": "<p>Delete all data from a :collection</p>",    "version": "1.0.0",    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "Data_Service"  },  {    "type": "get",    "url": "/api/v1/:collection",    "title": "GET All",    "name": "Data_Get",    "group": "Data_Service",    "description": "<p>The Data Service is a dynamic api endpoint according to what you specify in collection.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "_id",            "description": "<p>The bson id of the data, by designed, its datetime information can be extracted from the client side: https://steveridout.github.io/mongo-object-time/</p>"          },          {            "group": "Parameter",            "type": "String/Object",            "optional": false,            "field": "value",            "description": "<p>Your custom key-value pair of your data.</p>"          }        ]      },      "examples": [        {          "title": "Return example:",          "content": "   [{\n     \"_id\": 5910dd5df5306e9b11ab4aef,\n\t\t \"key\": \"value\",\n\t\t \"key\": \"value\",\n\t\t \"key\": \"value\"\n   },{\n     \"_id\": 5910dd5df5306e9b11aef213,\n\t\t \"key\": \"value\",\n \t\t \"key\": \"value\",\n  \t\t \"key\": \"value\"\n   }]",          "type": "json"        }      ]    },    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "Data_Service"  },  {    "type": "get",    "url": "/api/v1/:collection?",    "title": "GET ALL - Filter",    "name": "Data_Get_Filter",    "group": "Data_Service",    "description": "<p>Provide a query to filter results in a data collection. ie. /api/v1/:type?first_name=Stephen&amp;last_name=Curry&amp;team=Golden+State</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "query",            "optional": false,            "field": "key",            "description": "<p>To Filter simply put your filter variable against your key. ie first_name=john&amp;last_name=smith</p>"          },          {            "group": "Parameter",            "type": "query",            "optional": false,            "field": "_expect",            "description": "<p>White listing the attribute the collection would return. ie ?_expect=first_name+last_name will return the records with only these attributes.</p>"          },          {            "group": "Parameter",            "type": "query",            "optional": false,            "field": "_limit",            "description": "<p>Limiting record return per page. ie ?_limit=20 will return 20 records *it has to be used with _page</p>"          },          {            "group": "Parameter",            "type": "query",            "optional": false,            "field": "_page",            "description": "<p>Indicate the current page of return records of collection. ie ?_page=1 *not 0-based index, and it has to be used with _limit</p>"          },          {            "group": "Parameter",            "type": "query",            "optional": false,            "field": "_sortby",            "description": "<p>The term you would like it to be sorted by. ie ?_sortby=first_name, sortby=id *when sort by id, it will sort by its created _time</p>"          },          {            "group": "Parameter",            "type": "query",            "optional": false,            "field": "_sortorder",            "description": "<p>the query determins the sort order, accept either &quot;asc&quot; or &quot;desc&quot; ie ?_sortorder=asc</p>"          },          {            "group": "Parameter",            "type": "query",            "optional": false,            "field": "_sortas",            "description": "<p>the query sorts a number string as an integer: 1, 3, 21, 40. Without this option, it sorts number as string: 1, 21, 3, 40. accept only &quot;int&quot; ie ?_sortas=int</p>"          }        ]      }    },    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "Data_Service"  },  {    "type": "get",    "url": "/api/v1/:collection/:id",    "title": "GET ONE",    "name": "Data_Id",    "group": "Data_Service",    "description": "<p>Get record by :id base on :collection</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String/Object",            "optional": true,            "field": "value",            "description": "<p>Your custom key-value pair of your data.</p>"          }        ]      },      "examples": [        {          "title": "Return example:",          "content": "   {{\n     \"_id\": 5910dd5df5306e9b11ab4aef,\n\t\t \"key\": \"value\",\n\t\t \"key\": \"value\",\n\t\t \"key\": \"value\"\n   }}",          "type": "json"        }      ]    },    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "Data_Service"  },  {    "type": "post",    "url": "/api/v1/:collection",    "title": "POST",    "name": "Data_Post",    "group": "Data_Service",    "description": "<p>Creating an instance of a collection.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "value",            "description": "<p>Your custom key-value pair of your data.</p>"          }        ]      }    },    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "Data_Service"  },  {    "type": "post",    "url": "/api/v1/:collection/:id",    "title": "UPDATE",    "name": "Data_Update",    "group": "Data_Service",    "description": "<p>Updating key-value of a data object base on collection and id</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "value",            "description": "<p>Your custom key-value pair of your data.</p>"          }        ]      }    },    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "Data_Service"  },  {    "type": "post",    "url": "/api/v1/mailer",    "title": "POST",    "name": "Mailer",    "group": "Mailer_Service",    "description": "<p>Send an email via this endpoint. This endpoint is stateless and does not store the content of the information. Use x-www-form-urlencoded</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "to",            "description": "<p>the email address(es) you would like to send the email to.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>The subject of the email.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "text",            "description": "<p>The email message in plain text format.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "html",            "description": "<p>The email message in html format</p>"          }        ]      },      "examples": [        {          "title": "Return example:",          "content": "    {{\n\t\t\t\"template\": \"< h1 >Hi {{first_name}}, thank you for signing up.< h1 >\", \n\t\t\t\"data_id\": \"5910dd5df5306e9b11aef213\", \n\t\t\t\"text\": \"Welcome Joe! Thank you for signing up. Please click this link ...\" \n\t\t\t\"html\": \"html codes\"\n    }}",          "type": "json"        }      ]    },    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "Mailer_Service"  },  {    "type": "post",    "url": "/api/v1/sms",    "title": "POST",    "name": "SMS",    "group": "SMS_Service",    "description": "<p>Send an sms via this endpoint. This endpoint is stateless and does not store the content of the information.</p>",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "to",            "description": "<p>SMS is delivered to this phone number.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": "<p>Body of the SMS message.</p>"          }        ]      },      "examples": [        {          "title": "Return example:",          "content": "    {{\n\t\t\t\"to\": \"+16041234567\", \n\t\t\t\"body\": \"Welcome Joe! Thank you for signing up. Please text back the 4 digit verification code\" \n    }}",          "type": "json"        }      ]    },    "filename": "apidoc/_doc-v1.0.0.js",    "groupTitle": "SMS_Service"  }] });
